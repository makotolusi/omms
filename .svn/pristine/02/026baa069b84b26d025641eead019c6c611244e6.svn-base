package m.w.frs.mgserver.service;

import java.util.List;

import m.w.core.service.WxIdService;
import m.w.frs.mgserver.domain.Product;
import m.w.sys.service.FileService;
import m.w.sys.util.MirrorUtils;

import org.apache.commons.lang3.StringUtils;
import org.nutz.dao.Cnd;
import org.nutz.dao.Dao;
import org.nutz.dao.Sqls;
import org.nutz.dao.sql.Sql;
import org.nutz.ioc.loader.annotation.Inject;
import org.nutz.ioc.loader.annotation.IocBean;

@IocBean(fields = "dao")
public class ProductService extends WxIdService<Product> {

	@Inject
	private FileService fileService;

	public Object getRescueProcut(Long pieceId, String sortType, int index,
			String token) {

		Dao dao = this.dao();
		StringBuffer sqltext = new StringBuffer();
		sqltext.append("SELECT * FROM tbl_product where piece ='" + pieceId
				+ "' ");
		index = index + 9;
		sqltext.append(" ORDER BY entertime DESC limit " + (index) + " ");

		Sql sql = Sqls.create(sqltext.toString());
		sql.setCallback(Sqls.callback.entities());
		sql.setEntity(dao.getEntity(Product.class));
		dao.execute(sql);
		List<Product> as = sql.getList(Product.class);
		for (Product a : as) {
			String url = fileService.getQiniuPrivateUrl(a.getPicUrl1(), token,
					"rule2");
			a.setPicUrl1(url);
		}
		return as;

	}

	public Object getProduct(String productCode) {

		Cnd cnd = Cnd.limit();
		cnd.and("productCode", "=", productCode);

		Product p = this.fetch(cnd);
		String url = fileService.getQiniuPrivateUrl(p.getPicUrl1(), null,
				"rule2");
		p.setPicUrl1(url);

		for (int i = 1; i < 10; i++) {
			String picUrl = "picUrl" + i;
			Object value = MirrorUtils.getFieldValue(p, Product.class, picUrl);
			if (value != null && value !="")
				MirrorUtils.setFieldValue(p, Product.class, picUrl, value);

		}

		return p;

	}

}
