package m.w.frs.mgserver.module;

import java.util.Iterator;
import java.util.List;

import m.w.core.dto.DataGrid;
import m.w.core.dto.Result;
import m.w.frs.mgserver.service.AgentRelationService;
import m.w.frs.mgserver.service.AgentService;
import m.w.sys.domain.CommerceUser;
import m.w.sys.domain.CommerceUser.Role;
import m.w.sys.domain.CommerceUserAgentConfig;
import m.w.sys.service.CommerceUserService;

import org.nutz.dao.Cnd;
import org.nutz.ioc.loader.annotation.Inject;
import org.nutz.ioc.loader.annotation.IocBean;
import org.nutz.mvc.annotation.At;

@At("/agent")
@IocBean
public class AgentModule {

	@Inject
	private AgentService agentService;

	@Inject
	private AgentRelationService agentRelationService;
	
	@Inject
	private CommerceUserService commerceUserService;
	
	/**
	 * list order info
	 * */
	@At({ "/items" })
	public DataGrid items() {
		DataGrid dg = agentService.datagrid();
		List<CommerceUserAgentConfig> agents = (List<CommerceUserAgentConfig>) dg
				.getRows();
		for (Iterator iterator = agents.iterator(); iterator.hasNext();) {
			CommerceUserAgentConfig commerceUserAgentConfig = (CommerceUserAgentConfig) iterator
					.next();
			commerceUserAgentConfig = agentService.dao().fetchLinks(
					commerceUserAgentConfig, "commerceUser");
		}
		dg.setRows(agents);
		return dg;
	}

	@At({ "/save" })
	public Result save(Long agentId, float profitRatio) {
		CommerceUserAgentConfig config = agentService.fetch(Cnd.where(
				"agentId", "=", agentId));
		if(config!=null)
			config.setProfitRatio(profitRatio);
		else
		{
			config=new CommerceUserAgentConfig(agentId, profitRatio);
		}
		agentService.save(config);
		CommerceUser user=commerceUserService.fetch(agentId);
		user.setRole(Role.AGENT);
		commerceUserService.save(user);
		return Result.ok();
	}
}
