
Ext.define('product.ProductForm', {
    extend: 'Ext.form.Panel',
    xtype: 'form-product',
    //<example>
    requires: [
        'Ext.form.field.*','util.FileUploads','product.FileUploadsTextField'
    ],
    id:'product-form',
    //</example>

    frame: false,
    width: 600,
    bodyPadding: 10,
    layout: 'form',
    autoScroll:true,
	initComponent : function() {
		var me = this;
		
		    
		var event={ 
        	focus:function(nf, newv, oldv) {
        		Ext.create('Ext.window.Window', {
//        			height : 400,
//        			width : 400,
        			layout : 'fit',
        			modal : true,
        			id:'upload-win',
        			items : {
        				xtype : 'form-fileuploads',
        				tf:nf
        			}
        		}).show();
        	            }
        	        }
		// The data store containing the list of states
		// Create the combo box, attached to the states data store
		var currency=Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '货币类型',
		    store:  Ext.create('Ext.data.Store', {
			    fields: ['abbr', 'name'],
			    data : [
			        {"abbr":"USD", "name":"美元"},
			        {"abbr":"JPY", "name":"日元"},
			        {"abbr":"RMB", "name":"人民币"}
			        //...
			    ]
			}),
		    queryMode: 'local',
		    name: 'currency',
		    displayField: 'name',
		    value : me.currency,
		    valueField: 'abbr'
		});
		currency.setValue("RMB");
		var piece=Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '板块类型',
		    store: Ext.create('piece.PieceStore', {
				  listeners : {
					     load:function(store, records, options){
					    	 console.log(records[0].data.id);
					    	 piece.setValue(records[0].data.id);
					     }
					 }
			}),
		    queryMode: 'local',
			allowBlank : false,
		    name: 'piece',
		    displayField: 'text',
		    valueField: 'id'
	
		});
	
//		piece.on("afterrender", function() {
//			console.log(pieceStore.data);
////			piece.setValue(.getAt(0).data.code);
//		});
		if(me.piece!=undefined)
		piece.setValue(Number(me.piece));
		var pieceCategory=Ext.create('Ext.form.ComboBox', {
		    fieldLabel: '分类',
			allowBlank : false,
		    store:  Ext.create('type.TypeStore', {
		    	  listeners : {
					     load:function(store, records, options){
					    	 pieceCategory.setValue(records[0].data.id);
					     }
					 }
			}),
		    queryMode: 'local',
		    name: 'pieceCategory',
		    displayField: 'typeName',
		    valueField: 'id'
//		    listeners:{
//		    	"select":function(combo, record, index){
//		    	console.log(record[0].data.type);
//		    	var codeF=Ext.getCmp('productCode');
//		    	codeF.setValue(record[0].data.type+me.pid);
//		    	}
//		    	}
		});
		if(me.piece!=undefined)
		pieceCategory.setValue(Number(me.pieceCategory));
		Ext.apply(this, {
			items: [{
		        xtype: 'textfield',
		        name: 'systemName',
		        fieldLabel: '系统名称',
		    	allowBlank : false,
		        value : me.systemName
		    },{
		        xtype: 'textfield',
		        name: 'name',
		        id:'name',
		    	allowBlank : false,
		        fieldLabel: '产品名称',
		        value : me.name,
		    },{
		        xtype: 'textfield',
		        name: 'productCode',
		        id: 'productCode',
		    	allowBlank : false,
		        fieldLabel: '代码',
//		        disabled:me.productCode==undefined?false:true,
		        value : me.productCode,
		        validatorValue : false,
		        validateOnBlur : false,
				validateOnChange : false,
				
				disabled:me.pid==undefined?true:false,
		        validator: function (value) {
		        	if(me.pid==undefined)
		        		return true;
		        	console.log(value+" "+me.productCode);
		        	if(me.productCode==value)
					{
		        		return true;
			}
		        	if(this.validatorValue){
						return true;
					}
					else{
						return '产品代码已存在，请重新输入！';
					};
	            },
	            listeners : {
					blur : function(m) {
						console.log("blur  "+me.productCode+" "+m.getValue()+" ");
						if(me.productCode==m.getValue())
							{
							m.validatorValue = true;
							m.validate();
					}
						else{
							console.log("ajax");
					  	Ext.Ajax.request({
							url : ROOT_URL + '/productMaintenance/productCodeUnique',
							method : 'POST',
							params : {"productCode":m.getValue()},
							success : function(response) {
								var text = response.responseText;
								if(Ext.decode(text).unique==false)
									m.validatorValue = false;
								else
									m.validatorValue = true;
								m.validate();
							},
							failure : function(response) {
							}
						});
						}
					}}
		    },{
		        xtype: 'numberfield',
		        name: 'price',
		        minValue: 0,
		        hideTrigger: true,
		        keyNavEnabled: false,
		        mouseWheelEnabled: false,
		    	allowBlank : false,
		        fieldLabel: '价格',
		        value : me.price,
		    }, {  
		        xtype: 'htmleditor',  
		        name: 'description',
		        id: 'bio',  
		        plugins: [  
		            Ext.create('Ext.ux.form.plugin.HtmlEditor',{  
		                enableAll:  true  
		            })  
		        ],  
		        fieldLabel: '产品描述', 
		        height: 200,  
		        width : 600,
		        value : me.description,
		        anchor: '100%'  
		    },{
		        xtype: 'textareafield',
		        name: 'experience',
		        fieldLabel: '用户体验',
		        value : me.experience
		    },currency,{
		        xtype: 'numberfield',
		        name: 'quantity',
		        minValue: 0,
		        fieldLabel: '部件数量',
		        value : me.quantity
		    },{
		        xtype: 'numberfield',
		        name: 'total',
		        fieldLabel: '总数',
		        minValue: 0,
		        value : me.total
		    },pieceCategory,piece,
		 
		    {
		    	xtype : 'textfield-fileuploads',
	            fieldLabel: '图片地址1',
	            value : me.picUrl1,
	            name: 'picUrl1',
	        },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl2',
		        fieldLabel: '图片地址2',
		        value : me.picUrl2
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl3',
		        fieldLabel: '图片地址3',
		        value : me.picUrl3,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl4',
		        fieldLabel: '图片地址4',
		        value : me.picUrl4,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl5',
		        fieldLabel: '图片地址5',
		        value : me.picUrl5,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl6',
		        fieldLabel: '图片地址6',
		        value : me.picUrl6,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl7',
		        fieldLabel: '图片地址7',
		        value : me.picUrl7,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl8',
		        fieldLabel: '图片地址8',
		        value : me.picUrl8
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl9',
		        fieldLabel: '图片地址9',
		        value : me.picUrl9,
		    },{
		        xtype : 'textfield-fileuploads',
		        name: 'picUrl10',
		        fieldLabel: '图片地址10',
		        value : me.picUrl10,
		    }]
		});
		this.callParent();
	},
	buttons : [{
		text : '提交',
		id : 'sendbtn',
		handler : function() {
			var me = this;
			var form = Ext.getCmp('product-form');
			var formValue = form.getValues();
			formValue.id=form.pid;
			console.log(formValue);
			if (form.isValid()) {
				Ext.Ajax.request({
					url : ROOT_URL + '/productMaintenance/save',
					method : 'POST',
					params : formValue,
					success : function(response) {
						var text = response.responseText;
						Ext.MessageBox.alert('提示', '创建成功', function() {
							var p = Ext.getCmp('productGrid');
								p.getStore().reload();
								Ext.getCmp('product-update-win').close();

						}, this);

					},
					failure : function(response) {
						var text = response.responseText;
						Ext.MessageBox.alert('提示', '创建失败:' + text, function() {
							var p = Ext.getCmp('productGrid');
							p.getStore().reload();
							Ext.getCmp('product-update-win').close();
						}, this);
					}
				});
			}
		}
	}]
    
});
